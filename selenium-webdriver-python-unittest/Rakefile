require 'rubygems'

load File.join(File.dirname(__FILE__), "buildwise.rake")

BUILDWISE_QUICK_PROJECT_ID = "agiletravel-quick-build-python-unittest" 
BUILDWISE_FULL_PROJECT_ID = "agiletravel-full-build-python-unittest"
BUILDWISE_URL = ENV["BUILDWISE_MASTER"] || "http://buildwise.macmini"

FULL_BUILD_MAX_TIME = 60 * 60   # 1 hour
FULL_BUILD_CHECK_INTERVAL = 30  # 1 minute

desc "run all tests in this folder"
task "ui_tests:quick"  do
  `python3 -m unittest  discover test -p "*_test.py"`
end

def excluded_test_files
  ["test/ignored_spec.py"]
end


# Preqrueisite
# - Python 3
# - unittest selenium installed by pip
# - pip install unittest-xml-reporting


## Full Build
#
#  TODO - how to determin useing RSpec or Cucumber
#
desc "Running tests distributedly"
task "ci:ui_tests:full" do
  build_id = buildwise_start_build(:project_name => BUILDWISE_FULL_PROJECT_ID,
                                   :working_dir => File.expand_path(File.dirname(__FILE__)),
                                   :ui_test_dir => ["test"],
                                   :excluded => excluded_test_files || [],
                                   :distributed => true,
                                   :test_framework => "unittest"
  )

  the_build_status = buildwise_build_ui_test_status(build_id)
  start_time = Time.now

  puts "[Rake] Keep checking build |#{build_id} | #{the_build_status}"
  while ((Time.now - start_time ) < FULL_BUILD_MAX_TIME) # test exeuction timeout
    the_build_status = buildwise_build_ui_test_status(build_id)
    puts "[Rake] #{Time.now} Checking build status: |#{the_build_status}|"
    if the_build_status == "OK"
      exit 0
    elsif the_build_status == "Failed"
      exit -1
    else 
      sleep FULL_BUILD_CHECK_INTERVAL  # check the build status every minute
    end
  end
  puts "[Rake] Execution UI tests expired"
  exit -2
end
